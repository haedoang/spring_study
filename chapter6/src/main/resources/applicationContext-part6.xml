<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"

        >

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/tobi?useSSL=false"/>
        <property name="username" value="student"/>
        <property name="password" value="student"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>


    <!--<bean id="transactionAdvice" class="part6.user.service.TransactionAdvice">
        <property name="transactionManager" ref="platformTransactionManager"/>
    </bean>-->
<!-- tx 네임스페이스로 리팩터링 -->
<!--    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
<!--        <property name="transactionManager" ref="platformTransactionManager"/>-->
<!--        <property name="transactionAttributes">-->
<!--            <props>-->
<!--                <prop key="get*">PROPAGATION_REQUIRED,readOnly,timeout_30</prop>-->
<!--                <prop key="upgrade*">PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE</prop>-->
<!--                <prop key="*">PROPAGATION_REQUIRED</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- TransactionInterceptor 빈이 등록된다 -->
<!--    <tx:advice id="transactionAdvice" transaction-manager="platformTransactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true" timeout="30"/>-->
<!--            <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>-->
<!--            <tx:method name="*" />-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

    <tx:advice id="transactionAdvice" transaction-manager="platformTransactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <!-- 빈 표현식을 변경 -->
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>

    <bean id="platformTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDao" class="part6.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- prod
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com"/>
    </bean>
    -->

    <!-- dev -->
    <bean id="mailSender" class="part6.user.infra.DummyMailSender"/>

    <bean id="userService" class="part6.user.service.UserServiceImpl">
        <property name="mailSender" ref="mailSender"/>
        <property name="userDao" ref="userDao"/>
    </bean>

    <!-- 테스트용 UserService -->
    <bean id="testUserService" class="part6.user.UserServiceTest$TestUserServiceImpl" parent="userService"/>
</beans>
